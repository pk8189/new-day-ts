/**
 * File Generated by Sideko (sideko.dev)
 */

import * as types from "new-day-ts/types";

export type Authorisation = {
  amount?: types.Amount;
  authorisationAmount?: types.Amount;
  /**
   * Authorisation Code for the approved authorisation (ISO 8583 standard)
   */
  authorisationCode?: string | null;
  /**
   * Date and Time with offset(e.g. &quot;yyyy-mm-dd hh:mm:ss+mm:ss&quot;)
   */
  createdAt?: string | null;
  /**
   * Authorisation Description including Merchant name Location
   */
  description?: string | null;
  enrichmentData?: types.EnrichmentData;
  /**
   * Indicates entry type of transaction (&quot;Debit&quot;, &quot;Credit&quot;)
   */
  entryType?: types.AuthorisationEntryTypeEnum;
  foreignCurrencyAmount?: types.Amount;
  /**
   * Identifier for Authorisation entry
   */
  id?: string | null;
  instrument?: types.AuthorisationInstrument;
  merchant?: types.AuthorisationMerchant;
  /**
   * Represents Point of Service (POS) entry mode identifier of the authorisation (ISO 8583 standard)
   */
  posEntryMode?: string | null;
  /**
   * Represents Point of Service (POS) entry mode description of the authorisation (ISO 8583 standard)
   */
  posEntryModeDescription?: string | null;
  status?: types.Status;

  // Index types must also accommodate all defined properties if present (typescript limitation)
  // In reality all additional properties should only have type `any`
  // (there might be some duplication here)
  [additionalProperty: string]:
    | undefined
    | types.Amount
    | undefined
    | types.Amount
    | undefined
    | null
    | string
    | undefined
    | null
    | string
    | undefined
    | null
    | string
    | undefined
    | types.EnrichmentData
    | undefined
    | types.AuthorisationEntryTypeEnum
    | undefined
    | types.Amount
    | undefined
    | null
    | string
    | undefined
    | types.AuthorisationInstrument
    | undefined
    | types.AuthorisationMerchant
    | undefined
    | null
    | string
    | undefined
    | null
    | string
    | undefined
    | types.Status
    | any;
};
