/**
 * File Generated by Sideko (sideko.dev)
 */

import {
  CoreResourceClient,
  CoreClient,
  RequestOptions,
  ApiPromise,
} from "new-day-ts/core";
import { ArrearsClient } from "new-day-ts/resources/accounts/dues/arrears";
import * as requests from "new-day-ts/resources/accounts/dues/request-types";
import * as types from "new-day-ts/types";

export class DuesClient extends CoreResourceClient {
  arrears: ArrearsClient;

  constructor(client: CoreClient) {
    super(client);

    this.arrears = new ArrearsClient(this._client);
  }

  /**
 * import Client from "new-day-ts";

const client = new Client();

const res = await client.accounts.dues.list({
  accountId: "string",
  contextTenantid: "string",
});
 */
  list(
    request: requests.ListRequest,
    opts?: RequestOptions,
  ): ApiPromise<
    | types.GetAccountDuesResponse
    | types.GetAccountDuesResponse
    | types.GetAccountDuesResponse
  > {
    return this._client.makeRequest({
      method: "get",
      path: `/accounts/${request.accountId}/dues`,
      headers: { "context-tenantid": request.contextTenantid },
      responseType: "json",
      opts,
    });
  }
}
