/**
 * File Generated by Sideko (sideko.dev)
 */

import {
  CoreResourceClient,
  CoreClient,
  RequestOptions,
  ApiPromise,
} from "new-day-ts/core";
import * as requests from "new-day-ts/resources/accounts/authorisations/request-types";
import * as types from "new-day-ts/types";
import qs from "qs";

export class AuthorisationsClient extends CoreResourceClient {
  constructor(client: CoreClient) {
    super(client);
  }

  /**
   * Lists the authorisations for an account.
   */
  list(
    request: requests.ListRequest,
    opts?: RequestOptions,
  ): ApiPromise<
    | types.GetAuthorisationsResponse
    | types.GetAuthorisationsResponse
    | types.GetAuthorisationsResponse
  > {
    return this._client.makeRequest({
      method: "get",
      path: `/accounts/${request.accountId}/authorisations`,
      query: [
        qs.stringify({ enrichData: request.enrichData }),
        qs.stringify({ skip: request.skip }),
        qs.stringify({ status: request.status }),
        qs.stringify({ top: request.top }),
      ],
      headers: { "context-tenantid": request.contextTenantid },
      responseType: "json",
      opts,
    });
  }
}
